// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: Protos/trips.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace tripsGrpc {

  /// <summary>Holder for reflection information generated from Protos/trips.proto</summary>
  public static partial class TripsReflection {

    #region Descriptor
    /// <summary>File descriptor for Protos/trips.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static TripsReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "ChJQcm90b3MvdHJpcHMucHJvdG8SCXRyaXBzR3JwYyI1CgdBY2NvdW50EgoK",
            "AmlkGAEgASgFEgwKBG5hbWUYAiABKAkSEAoIcGFzc3dvcmQYAyABKAkilAEK",
            "BFRyaXASCgoCaWQYASABKAUSEAoIbGFuZG1hcmsYAiABKAkSEwoLY29tcGFu",
            "eU5hbWUYAyABKAkSFQoNZGVwYXJ0dXJlVGltZRgEIAEoARINCgVwcmljZRgF",
            "IAEoAhIXCg9hdmFpbGFibGVQbGFjZXMYBiABKAUSDQoFc3RhcnQYByABKAUS",
            "CwoDZW5kGAggASgFIowBCgdCb29raW5nEgoKAmlkGAEgASgFEiMKB2FjY291",
            "bnQYAiABKAsyEi50cmlwc0dycGMuQWNjb3VudBIdCgR0cmlwGAMgASgLMg8u",
            "dHJpcHNHcnBjLlRyaXASDgoGY2xpZW50GAQgASgJEg0KBXBob25lGAUgASgJ",
            "EhIKCm51bVRpY2tldHMYBiABKAUikQEKB1JlcXVlc3QSJQoHYWNjb3VudBgB",
            "IAEoCzISLnRyaXBzR3JwYy5BY2NvdW50SAASHwoEdHJpcBgCIAEoCzIPLnRy",
            "aXBzR3JwYy5UcmlwSAASJQoHYm9va2luZxgDIAEoCzISLnRyaXBzR3JwYy5C",
            "b29raW5nSAASDwoFZXJyb3IYBCABKAlIAEIGCgRkYXRhIuUBCghSZXNwb25z",
            "ZRIuCgR0eXBlGAEgASgOMiAudHJpcHNHcnBjLlJlc3BvbnNlLlJlc3BvbnNl",
            "VHlwZRIjCgdhY2NvdW50GAIgASgLMhIudHJpcHNHcnBjLkFjY291bnQSHgoF",
            "dHJpcHMYAyADKAsyDy50cmlwc0dycGMuVHJpcBIjCgdib29raW5nGAQgASgL",
            "MhIudHJpcHNHcnBjLkJvb2tpbmcSDQoFZXJyb3IYBSABKAkiMAoMUmVzcG9u",
            "c2VUeXBlEg0KCVVOSVZFUlNBTBAAEgYKAk9LEAESCQoFRVJST1IQAjKEAwoM",
            "VHJpcFNlcnZpY2VzEkUKGEdldEFjY291bnRCeU5hbWVQYXNzd29yZBISLnRy",
            "aXBzR3JwYy5SZXF1ZXN0GhMudHJpcHNHcnBjLlJlc3BvbnNlIgASOAoLR2V0",
            "QWxsVHJpcHMSEi50cmlwc0dycGMuUmVxdWVzdBoTLnRyaXBzR3JwYy5SZXNw",
            "b25zZSIAEkwKH0dldFRyaXBzQnlMYW5kbWFya0RlcGFydHVyZUhvdXISEi50",
            "cmlwc0dycGMuUmVxdWVzdBoTLnRyaXBzR3JwYy5SZXNwb25zZSIAEjMKBkxv",
            "Z291dBISLnRyaXBzR3JwYy5SZXF1ZXN0GhMudHJpcHNHcnBjLlJlc3BvbnNl",
            "IgASNwoKQWRkQm9va2luZxISLnRyaXBzR3JwYy5SZXF1ZXN0GhMudHJpcHNH",
            "cnBjLlJlc3BvbnNlIgASNwoIUmVnaXN0ZXISEi50cmlwc0dycGMuUmVxdWVz",
            "dBoTLnRyaXBzR3JwYy5SZXNwb25zZSIAMAFCKwoJdHJpcHNHcnBjQgpUcmlw",
            "c1Byb3RvUAGiAgNITFeqAgl0cmlwc0dycGNiBnByb3RvMw=="));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { },
          new pbr::GeneratedClrTypeInfo(null, null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::tripsGrpc.Account), global::tripsGrpc.Account.Parser, new[]{ "Id", "Name", "Password" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::tripsGrpc.Trip), global::tripsGrpc.Trip.Parser, new[]{ "Id", "Landmark", "CompanyName", "DepartureTime", "Price", "AvailablePlaces", "Start", "End" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::tripsGrpc.Booking), global::tripsGrpc.Booking.Parser, new[]{ "Id", "Account", "Trip", "Client", "Phone", "NumTickets" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::tripsGrpc.Request), global::tripsGrpc.Request.Parser, new[]{ "Account", "Trip", "Booking", "Error" }, new[]{ "Data" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::tripsGrpc.Response), global::tripsGrpc.Response.Parser, new[]{ "Type", "Account", "Trips", "Booking", "Error" }, null, new[]{ typeof(global::tripsGrpc.Response.Types.ResponseType) }, null, null)
          }));
    }
    #endregion

  }
  #region Messages
  public sealed partial class Account : pb::IMessage<Account> {
    private static readonly pb::MessageParser<Account> _parser = new pb::MessageParser<Account>(() => new Account());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<Account> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::tripsGrpc.TripsReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Account() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Account(Account other) : this() {
      id_ = other.id_;
      name_ = other.name_;
      password_ = other.password_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Account Clone() {
      return new Account(this);
    }

    /// <summary>Field number for the "id" field.</summary>
    public const int IdFieldNumber = 1;
    private int id_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Id {
      get { return id_; }
      set {
        id_ = value;
      }
    }

    /// <summary>Field number for the "name" field.</summary>
    public const int NameFieldNumber = 2;
    private string name_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Name {
      get { return name_; }
      set {
        name_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "password" field.</summary>
    public const int PasswordFieldNumber = 3;
    private string password_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Password {
      get { return password_; }
      set {
        password_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as Account);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(Account other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Id != other.Id) return false;
      if (Name != other.Name) return false;
      if (Password != other.Password) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Id != 0) hash ^= Id.GetHashCode();
      if (Name.Length != 0) hash ^= Name.GetHashCode();
      if (Password.Length != 0) hash ^= Password.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Id != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(Id);
      }
      if (Name.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Name);
      }
      if (Password.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(Password);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Id != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Id);
      }
      if (Name.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Name);
      }
      if (Password.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Password);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(Account other) {
      if (other == null) {
        return;
      }
      if (other.Id != 0) {
        Id = other.Id;
      }
      if (other.Name.Length != 0) {
        Name = other.Name;
      }
      if (other.Password.Length != 0) {
        Password = other.Password;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Id = input.ReadInt32();
            break;
          }
          case 18: {
            Name = input.ReadString();
            break;
          }
          case 26: {
            Password = input.ReadString();
            break;
          }
        }
      }
    }

  }

  public sealed partial class Trip : pb::IMessage<Trip> {
    private static readonly pb::MessageParser<Trip> _parser = new pb::MessageParser<Trip>(() => new Trip());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<Trip> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::tripsGrpc.TripsReflection.Descriptor.MessageTypes[1]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Trip() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Trip(Trip other) : this() {
      id_ = other.id_;
      landmark_ = other.landmark_;
      companyName_ = other.companyName_;
      departureTime_ = other.departureTime_;
      price_ = other.price_;
      availablePlaces_ = other.availablePlaces_;
      start_ = other.start_;
      end_ = other.end_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Trip Clone() {
      return new Trip(this);
    }

    /// <summary>Field number for the "id" field.</summary>
    public const int IdFieldNumber = 1;
    private int id_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Id {
      get { return id_; }
      set {
        id_ = value;
      }
    }

    /// <summary>Field number for the "landmark" field.</summary>
    public const int LandmarkFieldNumber = 2;
    private string landmark_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Landmark {
      get { return landmark_; }
      set {
        landmark_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "companyName" field.</summary>
    public const int CompanyNameFieldNumber = 3;
    private string companyName_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string CompanyName {
      get { return companyName_; }
      set {
        companyName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "departureTime" field.</summary>
    public const int DepartureTimeFieldNumber = 4;
    private double departureTime_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public double DepartureTime {
      get { return departureTime_; }
      set {
        departureTime_ = value;
      }
    }

    /// <summary>Field number for the "price" field.</summary>
    public const int PriceFieldNumber = 5;
    private float price_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public float Price {
      get { return price_; }
      set {
        price_ = value;
      }
    }

    /// <summary>Field number for the "availablePlaces" field.</summary>
    public const int AvailablePlacesFieldNumber = 6;
    private int availablePlaces_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int AvailablePlaces {
      get { return availablePlaces_; }
      set {
        availablePlaces_ = value;
      }
    }

    /// <summary>Field number for the "start" field.</summary>
    public const int StartFieldNumber = 7;
    private int start_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Start {
      get { return start_; }
      set {
        start_ = value;
      }
    }

    /// <summary>Field number for the "end" field.</summary>
    public const int EndFieldNumber = 8;
    private int end_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int End {
      get { return end_; }
      set {
        end_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as Trip);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(Trip other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Id != other.Id) return false;
      if (Landmark != other.Landmark) return false;
      if (CompanyName != other.CompanyName) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.Equals(DepartureTime, other.DepartureTime)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(Price, other.Price)) return false;
      if (AvailablePlaces != other.AvailablePlaces) return false;
      if (Start != other.Start) return false;
      if (End != other.End) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Id != 0) hash ^= Id.GetHashCode();
      if (Landmark.Length != 0) hash ^= Landmark.GetHashCode();
      if (CompanyName.Length != 0) hash ^= CompanyName.GetHashCode();
      if (DepartureTime != 0D) hash ^= pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.GetHashCode(DepartureTime);
      if (Price != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(Price);
      if (AvailablePlaces != 0) hash ^= AvailablePlaces.GetHashCode();
      if (Start != 0) hash ^= Start.GetHashCode();
      if (End != 0) hash ^= End.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Id != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(Id);
      }
      if (Landmark.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Landmark);
      }
      if (CompanyName.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(CompanyName);
      }
      if (DepartureTime != 0D) {
        output.WriteRawTag(33);
        output.WriteDouble(DepartureTime);
      }
      if (Price != 0F) {
        output.WriteRawTag(45);
        output.WriteFloat(Price);
      }
      if (AvailablePlaces != 0) {
        output.WriteRawTag(48);
        output.WriteInt32(AvailablePlaces);
      }
      if (Start != 0) {
        output.WriteRawTag(56);
        output.WriteInt32(Start);
      }
      if (End != 0) {
        output.WriteRawTag(64);
        output.WriteInt32(End);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Id != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Id);
      }
      if (Landmark.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Landmark);
      }
      if (CompanyName.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(CompanyName);
      }
      if (DepartureTime != 0D) {
        size += 1 + 8;
      }
      if (Price != 0F) {
        size += 1 + 4;
      }
      if (AvailablePlaces != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(AvailablePlaces);
      }
      if (Start != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Start);
      }
      if (End != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(End);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(Trip other) {
      if (other == null) {
        return;
      }
      if (other.Id != 0) {
        Id = other.Id;
      }
      if (other.Landmark.Length != 0) {
        Landmark = other.Landmark;
      }
      if (other.CompanyName.Length != 0) {
        CompanyName = other.CompanyName;
      }
      if (other.DepartureTime != 0D) {
        DepartureTime = other.DepartureTime;
      }
      if (other.Price != 0F) {
        Price = other.Price;
      }
      if (other.AvailablePlaces != 0) {
        AvailablePlaces = other.AvailablePlaces;
      }
      if (other.Start != 0) {
        Start = other.Start;
      }
      if (other.End != 0) {
        End = other.End;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Id = input.ReadInt32();
            break;
          }
          case 18: {
            Landmark = input.ReadString();
            break;
          }
          case 26: {
            CompanyName = input.ReadString();
            break;
          }
          case 33: {
            DepartureTime = input.ReadDouble();
            break;
          }
          case 45: {
            Price = input.ReadFloat();
            break;
          }
          case 48: {
            AvailablePlaces = input.ReadInt32();
            break;
          }
          case 56: {
            Start = input.ReadInt32();
            break;
          }
          case 64: {
            End = input.ReadInt32();
            break;
          }
        }
      }
    }

  }

  public sealed partial class Booking : pb::IMessage<Booking> {
    private static readonly pb::MessageParser<Booking> _parser = new pb::MessageParser<Booking>(() => new Booking());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<Booking> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::tripsGrpc.TripsReflection.Descriptor.MessageTypes[2]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Booking() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Booking(Booking other) : this() {
      id_ = other.id_;
      account_ = other.account_ != null ? other.account_.Clone() : null;
      trip_ = other.trip_ != null ? other.trip_.Clone() : null;
      client_ = other.client_;
      phone_ = other.phone_;
      numTickets_ = other.numTickets_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Booking Clone() {
      return new Booking(this);
    }

    /// <summary>Field number for the "id" field.</summary>
    public const int IdFieldNumber = 1;
    private int id_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Id {
      get { return id_; }
      set {
        id_ = value;
      }
    }

    /// <summary>Field number for the "account" field.</summary>
    public const int AccountFieldNumber = 2;
    private global::tripsGrpc.Account account_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::tripsGrpc.Account Account {
      get { return account_; }
      set {
        account_ = value;
      }
    }

    /// <summary>Field number for the "trip" field.</summary>
    public const int TripFieldNumber = 3;
    private global::tripsGrpc.Trip trip_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::tripsGrpc.Trip Trip {
      get { return trip_; }
      set {
        trip_ = value;
      }
    }

    /// <summary>Field number for the "client" field.</summary>
    public const int ClientFieldNumber = 4;
    private string client_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Client {
      get { return client_; }
      set {
        client_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "phone" field.</summary>
    public const int PhoneFieldNumber = 5;
    private string phone_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Phone {
      get { return phone_; }
      set {
        phone_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "numTickets" field.</summary>
    public const int NumTicketsFieldNumber = 6;
    private int numTickets_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int NumTickets {
      get { return numTickets_; }
      set {
        numTickets_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as Booking);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(Booking other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Id != other.Id) return false;
      if (!object.Equals(Account, other.Account)) return false;
      if (!object.Equals(Trip, other.Trip)) return false;
      if (Client != other.Client) return false;
      if (Phone != other.Phone) return false;
      if (NumTickets != other.NumTickets) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Id != 0) hash ^= Id.GetHashCode();
      if (account_ != null) hash ^= Account.GetHashCode();
      if (trip_ != null) hash ^= Trip.GetHashCode();
      if (Client.Length != 0) hash ^= Client.GetHashCode();
      if (Phone.Length != 0) hash ^= Phone.GetHashCode();
      if (NumTickets != 0) hash ^= NumTickets.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Id != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(Id);
      }
      if (account_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(Account);
      }
      if (trip_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(Trip);
      }
      if (Client.Length != 0) {
        output.WriteRawTag(34);
        output.WriteString(Client);
      }
      if (Phone.Length != 0) {
        output.WriteRawTag(42);
        output.WriteString(Phone);
      }
      if (NumTickets != 0) {
        output.WriteRawTag(48);
        output.WriteInt32(NumTickets);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Id != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Id);
      }
      if (account_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Account);
      }
      if (trip_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Trip);
      }
      if (Client.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Client);
      }
      if (Phone.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Phone);
      }
      if (NumTickets != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(NumTickets);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(Booking other) {
      if (other == null) {
        return;
      }
      if (other.Id != 0) {
        Id = other.Id;
      }
      if (other.account_ != null) {
        if (account_ == null) {
          Account = new global::tripsGrpc.Account();
        }
        Account.MergeFrom(other.Account);
      }
      if (other.trip_ != null) {
        if (trip_ == null) {
          Trip = new global::tripsGrpc.Trip();
        }
        Trip.MergeFrom(other.Trip);
      }
      if (other.Client.Length != 0) {
        Client = other.Client;
      }
      if (other.Phone.Length != 0) {
        Phone = other.Phone;
      }
      if (other.NumTickets != 0) {
        NumTickets = other.NumTickets;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Id = input.ReadInt32();
            break;
          }
          case 18: {
            if (account_ == null) {
              Account = new global::tripsGrpc.Account();
            }
            input.ReadMessage(Account);
            break;
          }
          case 26: {
            if (trip_ == null) {
              Trip = new global::tripsGrpc.Trip();
            }
            input.ReadMessage(Trip);
            break;
          }
          case 34: {
            Client = input.ReadString();
            break;
          }
          case 42: {
            Phone = input.ReadString();
            break;
          }
          case 48: {
            NumTickets = input.ReadInt32();
            break;
          }
        }
      }
    }

  }

  public sealed partial class Request : pb::IMessage<Request> {
    private static readonly pb::MessageParser<Request> _parser = new pb::MessageParser<Request>(() => new Request());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<Request> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::tripsGrpc.TripsReflection.Descriptor.MessageTypes[3]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Request() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Request(Request other) : this() {
      switch (other.DataCase) {
        case DataOneofCase.Account:
          Account = other.Account.Clone();
          break;
        case DataOneofCase.Trip:
          Trip = other.Trip.Clone();
          break;
        case DataOneofCase.Booking:
          Booking = other.Booking.Clone();
          break;
        case DataOneofCase.Error:
          Error = other.Error;
          break;
      }

      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Request Clone() {
      return new Request(this);
    }

    /// <summary>Field number for the "account" field.</summary>
    public const int AccountFieldNumber = 1;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::tripsGrpc.Account Account {
      get { return dataCase_ == DataOneofCase.Account ? (global::tripsGrpc.Account) data_ : null; }
      set {
        data_ = value;
        dataCase_ = value == null ? DataOneofCase.None : DataOneofCase.Account;
      }
    }

    /// <summary>Field number for the "trip" field.</summary>
    public const int TripFieldNumber = 2;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::tripsGrpc.Trip Trip {
      get { return dataCase_ == DataOneofCase.Trip ? (global::tripsGrpc.Trip) data_ : null; }
      set {
        data_ = value;
        dataCase_ = value == null ? DataOneofCase.None : DataOneofCase.Trip;
      }
    }

    /// <summary>Field number for the "booking" field.</summary>
    public const int BookingFieldNumber = 3;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::tripsGrpc.Booking Booking {
      get { return dataCase_ == DataOneofCase.Booking ? (global::tripsGrpc.Booking) data_ : null; }
      set {
        data_ = value;
        dataCase_ = value == null ? DataOneofCase.None : DataOneofCase.Booking;
      }
    }

    /// <summary>Field number for the "error" field.</summary>
    public const int ErrorFieldNumber = 4;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Error {
      get { return dataCase_ == DataOneofCase.Error ? (string) data_ : ""; }
      set {
        data_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
        dataCase_ = DataOneofCase.Error;
      }
    }

    private object data_;
    /// <summary>Enum of possible cases for the "data" oneof.</summary>
    public enum DataOneofCase {
      None = 0,
      Account = 1,
      Trip = 2,
      Booking = 3,
      Error = 4,
    }
    private DataOneofCase dataCase_ = DataOneofCase.None;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DataOneofCase DataCase {
      get { return dataCase_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearData() {
      dataCase_ = DataOneofCase.None;
      data_ = null;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as Request);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(Request other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Account, other.Account)) return false;
      if (!object.Equals(Trip, other.Trip)) return false;
      if (!object.Equals(Booking, other.Booking)) return false;
      if (Error != other.Error) return false;
      if (DataCase != other.DataCase) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (dataCase_ == DataOneofCase.Account) hash ^= Account.GetHashCode();
      if (dataCase_ == DataOneofCase.Trip) hash ^= Trip.GetHashCode();
      if (dataCase_ == DataOneofCase.Booking) hash ^= Booking.GetHashCode();
      if (dataCase_ == DataOneofCase.Error) hash ^= Error.GetHashCode();
      hash ^= (int) dataCase_;
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (dataCase_ == DataOneofCase.Account) {
        output.WriteRawTag(10);
        output.WriteMessage(Account);
      }
      if (dataCase_ == DataOneofCase.Trip) {
        output.WriteRawTag(18);
        output.WriteMessage(Trip);
      }
      if (dataCase_ == DataOneofCase.Booking) {
        output.WriteRawTag(26);
        output.WriteMessage(Booking);
      }
      if (dataCase_ == DataOneofCase.Error) {
        output.WriteRawTag(34);
        output.WriteString(Error);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (dataCase_ == DataOneofCase.Account) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Account);
      }
      if (dataCase_ == DataOneofCase.Trip) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Trip);
      }
      if (dataCase_ == DataOneofCase.Booking) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Booking);
      }
      if (dataCase_ == DataOneofCase.Error) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Error);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(Request other) {
      if (other == null) {
        return;
      }
      switch (other.DataCase) {
        case DataOneofCase.Account:
          if (Account == null) {
            Account = new global::tripsGrpc.Account();
          }
          Account.MergeFrom(other.Account);
          break;
        case DataOneofCase.Trip:
          if (Trip == null) {
            Trip = new global::tripsGrpc.Trip();
          }
          Trip.MergeFrom(other.Trip);
          break;
        case DataOneofCase.Booking:
          if (Booking == null) {
            Booking = new global::tripsGrpc.Booking();
          }
          Booking.MergeFrom(other.Booking);
          break;
        case DataOneofCase.Error:
          Error = other.Error;
          break;
      }

      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            global::tripsGrpc.Account subBuilder = new global::tripsGrpc.Account();
            if (dataCase_ == DataOneofCase.Account) {
              subBuilder.MergeFrom(Account);
            }
            input.ReadMessage(subBuilder);
            Account = subBuilder;
            break;
          }
          case 18: {
            global::tripsGrpc.Trip subBuilder = new global::tripsGrpc.Trip();
            if (dataCase_ == DataOneofCase.Trip) {
              subBuilder.MergeFrom(Trip);
            }
            input.ReadMessage(subBuilder);
            Trip = subBuilder;
            break;
          }
          case 26: {
            global::tripsGrpc.Booking subBuilder = new global::tripsGrpc.Booking();
            if (dataCase_ == DataOneofCase.Booking) {
              subBuilder.MergeFrom(Booking);
            }
            input.ReadMessage(subBuilder);
            Booking = subBuilder;
            break;
          }
          case 34: {
            Error = input.ReadString();
            break;
          }
        }
      }
    }

  }

  public sealed partial class Response : pb::IMessage<Response> {
    private static readonly pb::MessageParser<Response> _parser = new pb::MessageParser<Response>(() => new Response());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<Response> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::tripsGrpc.TripsReflection.Descriptor.MessageTypes[4]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Response() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Response(Response other) : this() {
      type_ = other.type_;
      account_ = other.account_ != null ? other.account_.Clone() : null;
      trips_ = other.trips_.Clone();
      booking_ = other.booking_ != null ? other.booking_.Clone() : null;
      error_ = other.error_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Response Clone() {
      return new Response(this);
    }

    /// <summary>Field number for the "type" field.</summary>
    public const int TypeFieldNumber = 1;
    private global::tripsGrpc.Response.Types.ResponseType type_ = global::tripsGrpc.Response.Types.ResponseType.Universal;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::tripsGrpc.Response.Types.ResponseType Type {
      get { return type_; }
      set {
        type_ = value;
      }
    }

    /// <summary>Field number for the "account" field.</summary>
    public const int AccountFieldNumber = 2;
    private global::tripsGrpc.Account account_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::tripsGrpc.Account Account {
      get { return account_; }
      set {
        account_ = value;
      }
    }

    /// <summary>Field number for the "trips" field.</summary>
    public const int TripsFieldNumber = 3;
    private static readonly pb::FieldCodec<global::tripsGrpc.Trip> _repeated_trips_codec
        = pb::FieldCodec.ForMessage(26, global::tripsGrpc.Trip.Parser);
    private readonly pbc::RepeatedField<global::tripsGrpc.Trip> trips_ = new pbc::RepeatedField<global::tripsGrpc.Trip>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::tripsGrpc.Trip> Trips {
      get { return trips_; }
    }

    /// <summary>Field number for the "booking" field.</summary>
    public const int BookingFieldNumber = 4;
    private global::tripsGrpc.Booking booking_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::tripsGrpc.Booking Booking {
      get { return booking_; }
      set {
        booking_ = value;
      }
    }

    /// <summary>Field number for the "error" field.</summary>
    public const int ErrorFieldNumber = 5;
    private string error_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Error {
      get { return error_; }
      set {
        error_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as Response);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(Response other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Type != other.Type) return false;
      if (!object.Equals(Account, other.Account)) return false;
      if(!trips_.Equals(other.trips_)) return false;
      if (!object.Equals(Booking, other.Booking)) return false;
      if (Error != other.Error) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Type != global::tripsGrpc.Response.Types.ResponseType.Universal) hash ^= Type.GetHashCode();
      if (account_ != null) hash ^= Account.GetHashCode();
      hash ^= trips_.GetHashCode();
      if (booking_ != null) hash ^= Booking.GetHashCode();
      if (Error.Length != 0) hash ^= Error.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Type != global::tripsGrpc.Response.Types.ResponseType.Universal) {
        output.WriteRawTag(8);
        output.WriteEnum((int) Type);
      }
      if (account_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(Account);
      }
      trips_.WriteTo(output, _repeated_trips_codec);
      if (booking_ != null) {
        output.WriteRawTag(34);
        output.WriteMessage(Booking);
      }
      if (Error.Length != 0) {
        output.WriteRawTag(42);
        output.WriteString(Error);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Type != global::tripsGrpc.Response.Types.ResponseType.Universal) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) Type);
      }
      if (account_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Account);
      }
      size += trips_.CalculateSize(_repeated_trips_codec);
      if (booking_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Booking);
      }
      if (Error.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Error);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(Response other) {
      if (other == null) {
        return;
      }
      if (other.Type != global::tripsGrpc.Response.Types.ResponseType.Universal) {
        Type = other.Type;
      }
      if (other.account_ != null) {
        if (account_ == null) {
          Account = new global::tripsGrpc.Account();
        }
        Account.MergeFrom(other.Account);
      }
      trips_.Add(other.trips_);
      if (other.booking_ != null) {
        if (booking_ == null) {
          Booking = new global::tripsGrpc.Booking();
        }
        Booking.MergeFrom(other.Booking);
      }
      if (other.Error.Length != 0) {
        Error = other.Error;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Type = (global::tripsGrpc.Response.Types.ResponseType) input.ReadEnum();
            break;
          }
          case 18: {
            if (account_ == null) {
              Account = new global::tripsGrpc.Account();
            }
            input.ReadMessage(Account);
            break;
          }
          case 26: {
            trips_.AddEntriesFrom(input, _repeated_trips_codec);
            break;
          }
          case 34: {
            if (booking_ == null) {
              Booking = new global::tripsGrpc.Booking();
            }
            input.ReadMessage(Booking);
            break;
          }
          case 42: {
            Error = input.ReadString();
            break;
          }
        }
      }
    }

    #region Nested types
    /// <summary>Container for nested types declared in the Response message type.</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static partial class Types {
      public enum ResponseType {
        [pbr::OriginalName("UNIVERSAL")] Universal = 0,
        [pbr::OriginalName("OK")] Ok = 1,
        [pbr::OriginalName("ERROR")] Error = 2,
      }

    }
    #endregion

  }

  #endregion

}

#endregion Designer generated code
